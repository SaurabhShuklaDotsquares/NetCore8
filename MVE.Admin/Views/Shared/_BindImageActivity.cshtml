@model List<FileUploadDTO>
@{
    int sectionId = Convert.ToInt32(ViewData["FileSectionId"]);
    string fileExtensions = ViewData["FileExtensions"] != null ? ViewData["FileExtensions"].ToString() : "image/*";//image/*,video/mp4
    bool isHaveVideo = fileExtensions.IndexOf("video/") >= 0;
    string modelFilePropertyName = ViewData["ModelFilePropertyName"].ToString();
    string modelFileParentCtrlName = ViewData["ModelFileParentCtrlName"] != null ? ViewData["ModelFileParentCtrlName"].ToString() : string.Empty;
    string modelFilePropertyId = modelFilePropertyName.Replace("[", "_").Replace("]", "_").Replace(".", "_");
    float _packagedetail_id = Convert.ToInt32(ViewData["_packagedetail_id"]);
    string _packagedetail_ActivityName = Convert.ToString(ViewData["_packagedetail_ActivityName"]);
    List<FileUploadDTO> files = Model.Where(x => x.SectionId == sectionId && x.EntityId == _packagedetail_id).ToList();
    int imageIndex = 0, titleIndex = 0;
    string uploaderId = Guid.NewGuid().ToString().Replace("-", "");
    bool isHaveImage = files.Any(t => !string.IsNullOrWhiteSpace(t.FilePath));
    string imageTitlePropertyName = ((UploadSection)sectionId).GetDisplayAttrValue(EnumDisplayAttribute.Title);
    bool isHaveTitle = !string.IsNullOrWhiteSpace(imageTitlePropertyName);
    //List<LanguageDTO> languages = isHaveTitle && TempData.Peek("Languages") != null ? System.Text.Json.JsonSerializer.Deserialize<List<LanguageDTO>>(TempData.Peek("Languages").ToString()) : new List<LanguageDTO>();
    //FileUploadTitleDTO fileUploadTitle = null;

    int ActivityIncrementCounterFromDictionary = Convert.ToInt32(ViewData["ActivityIncrementCounterFromDictionary"]);

    int indexName = 0;
    indexName = Convert.ToInt32(ViewData["indexName"]);
    if (_packagedetail_id > 0)
    {
        imageIndex = Convert.ToInt32(ViewData["indexName"]);
    }
    else
    {
        imageIndex = 0;
    }

}
<div class="profile-photo-section pkgvdocontainerBIA">
    <div class="user-photo app-upload-img">
        <div class="uploaded-images-continer">
            @if (files != null && files.Count(t => !string.IsNullOrWhiteSpace(t.FilePath)) > 0)
            {
                @foreach (var file in files)
                {
                    imageIndex = Model.IndexOf(file);
                    imageIndex = 0;
                    <div class="app-uploaded-img actual-uploaded">
                        <div class="reapeat-upload-img">
                            @*<input type="hidden" class="hiddenImgOrder" id="@($"{modelFilePropertyId}_{imageIndex}__ImageOrder")" value="@file.ImageOrder" name="@($"{modelFilePropertyName}.ImageOrder")" />*@
                            <input type="hidden" id="@($"{modelFilePropertyId}_{imageIndex}__EntityId")" value="@file.EntityId" name="@($"{modelFilePropertyName}{imageIndex}.EntityId")" />
                            <input type="hidden" id="@($"{modelFilePropertyId}_{imageIndex}__FId")" value="@file.FId" name="@($"{modelFilePropertyName}{imageIndex}.FId")" />
                            <input type="hidden" id="@($"{modelFilePropertyId}_{imageIndex}__SectionId")" value="@file.SectionId" name="@($"{modelFilePropertyName}{imageIndex}.SectionId")" />
                            <input type="hidden" id="@($"{modelFilePropertyId}_{imageIndex}__Name")" value="@file.Name" name="@($"{modelFilePropertyName}{imageIndex}.Name")" />
                            <input type="hidden" id="@($"{modelFilePropertyId}_{imageIndex}__FileSize")" value="@file.FileSize" name="@($"{modelFilePropertyName}{imageIndex}.FileSize")" />
                            <input type="hidden" id="@($"{modelFilePropertyId}_{imageIndex}__FileOriginalName")" value="@file.FileOriginalName" name="@($"{modelFilePropertyName}{imageIndex}.FileOriginalName")" />
                            <input type="hidden" id="@($"{modelFilePropertyId}_{imageIndex}__FileExtension")" value="@file.FileExtension" name="@($"{modelFilePropertyName}{imageIndex}.FileExtension")" />
                            <input type="hidden" id="@($"{modelFilePropertyId}_{imageIndex}__FileStreams")" value="@file.FileStreams" name="@($"{modelFilePropertyName}{imageIndex}.FileStreams")" />
                            @*<input type="hidden" id="@($"{modelFilePropertyId}_{imageIndex}__ForeignId")" value="@file.ForeignId" name="@($"{modelFilePropertyName}.ForeignId")" />*@

                            @if (!string.IsNullOrEmpty(file.FilePath))
                            {
                                if (isHaveVideo)
                                {
                                    <video class="showfle" controls preload="metadata">
                                        <source src="@file.FilePath"
                                type='video/mp4;codecs="avc1.42E01E, mp4a.40.2"'
                                data-original="@file.FilePath">
                                    </video>
                                }
                                else
                                {
                                    <img src="@file.FilePath" alt="Photo" title="Photo" class="showfle" />
                                }
                            }
                            else
                            {
                                <img src="@SiteKeys.Domain/images/upload-image.png" alt="Photo" class="showfle" />
                            }

                            @* @if (isHaveTitle)
                    {
                    <div class="img-title-container">
                    <div class="dropdown">
                    <button id="@($"{modelFilePropertyId}_{imageIndex}__ImageTitle")" class="dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fa fa-language"></i>
                    <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="@($"{modelFilePropertyId}_{imageIndex}__ImageTitle")" style="z-index:9999;">
                    @foreach (var _language in languages)
                    {
                    titleIndex = languages.IndexOf(_language);
                    fileUploadTitle = file.Titles?.FirstOrDefault(x => x.LanguageId == _language.LanguageId);
                    <li>
                    <div class="form-group">
                    <input type="hidden" id="@($"{modelFilePropertyId}_{imageIndex}__{imageTitlePropertyName}_{titleIndex}__LanguageId")" name="@($"{modelFilePropertyName}[{imageIndex}].{imageTitlePropertyName}[{titleIndex}].LanguageId")" value="@_language.LanguageId">
                    <label for="@($"{modelFilePropertyId}_{imageIndex}__{imageTitlePropertyName}_{titleIndex}__Title")">@_language.Language</label>
                    <input id="@($"{modelFilePropertyId}_{imageIndex}__{imageTitlePropertyName}_{titleIndex}__Title")" name="@($"{modelFilePropertyName}[{imageIndex}].{imageTitlePropertyName}[{titleIndex}].Title")" type="text" value="@fileUploadTitle?.Title" class="form-control" maxlength="250" autocomplete="off" placeholder="Alt tag" />
                    </div>
                    </li>
                    }
                    </ul>
                    </div>
                    </div>
                    }*@
                        </div>
                        <div class="user-photo-controls">
                            <div class="btn delete-photo">  @file.Name <i class="fa fa-close"></i></div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="app-uploaded-img app-no-image">
                    <div class="reapeat-upload-img">
                        <img src="@SiteKeys.Domain/images/upload-image.png" alt="Photo" />
                    </div>
                </div>
            }
        </div>
        <div class="user-photo-controls app-upload-cancel">
            @if (((UploadSection)sectionId).GetDisplayAttrValue(EnumDisplayAttribute.Prompt) == FileUploaderType.Multiple)
            {
                @*<input onchange="onSelectImageCall()" type="file" id="@($"fileSection{uploaderId}_{sectionId}{0}__File")" name="@($"fileSection{uploaderId}_{sectionId}{0}.File")" class="d-none app-img-uploader" @(isHaveTitle ? $"data-title-property-name={imageTitlePropertyName}" : "") data-parent-ctrl-name="@modelFileParentCtrlName" data-property-id="@modelFilePropertyId" data-property-name="@modelFilePropertyName" data-sectionId="@sectionId" multiple="multiple" accept="@fileExtensions" />
                <label for="@($"fileSection{uploaderId}_{sectionId}{0}__File")" class="btn upload-photo"><i class="fa fa-plus"></i> Add @(isHaveVideo ? "video" : "image")</label>*@

                <input type="file" onclick="ResetObject(this);" onchange="onSelectImageCallPackage(1,'pkgvdocontainerBIA',this,'i');" id="@($"fileSection{uploaderId}_f{sectionId}__File")" name="@($"fileSection_{uploaderId}_f{sectionId}.File")" class="d-none app-img-uploader" @(isHaveTitle ? $"data-title-property-name={imageTitlePropertyName}" : "" ) data-parent-ctrl-name="@modelFileParentCtrlName" data-property-id="@modelFilePropertyId" data-property-name="@modelFilePropertyName" data-sectionId="@sectionId" multiple="multiple" accept="@fileExtensions" />
                <label for="@($"fileSection{uploaderId}_f{sectionId}__File")" class="btn upload-photo">@(isHaveImage ? "Change" : "Add") @(isHaveVideo ? "video" : "image")</label>
            }
            else
            {
                @*<input onchange="onSelectImageCall()" type="file" id="@($"fileSection{uploaderId}_{sectionId}{indexName}__File")" name="@($"fileSection{uploaderId}_{sectionId}{indexName}.File")" class="d-none app-img-uploader" @(isHaveTitle ? $"data-title-property-name={imageTitlePropertyName}" : "") data-parent-ctrl-name="@modelFilePropertyName@sobj" data-property-id="@modelFilePropertyId@sobj" data-property-name="@modelFilePropertyName@sobj" data-sectionId="@sectionId" accept="@fileExtensions" />*@
                <input type="file" onclick="ResetObject(this);" onchange="onSelectImageCallPackage(1,'pkgvdocontainerBIA',this,'i');" id="@($"fileSection{uploaderId}_f{sectionId}__File")" name="@($"fileSection_{uploaderId}_f{sectionId}.File")" class="d-none app-img-uploader" @(isHaveTitle ? $"data-title-property-name={imageTitlePropertyName}" : "" ) data-parent-ctrl-name="@modelFileParentCtrlName" data-property-id="@modelFilePropertyId" data-property-name="@modelFilePropertyName" data-sectionId="@sectionId" accept="@fileExtensions" />
                <label for="@($"fileSection{uploaderId}_f{sectionId}__File")" class="btn upload-photo">@(isHaveImage ? "Change" : "Add") @(isHaveVideo ? "video" : "image")</label>
            }
        </div>
        <div>
            <label style="color:#f75209;font-weight: normal;font-size: small;">Only .jpg, .jpeg, .bmp, .gif, .png images are allowed*</label>
        </div>
    </div>
</div>